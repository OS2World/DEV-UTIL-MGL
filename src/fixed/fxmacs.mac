;****************************************************************************
;*
;*                High Speed Fixed/Floating Point Library
;*
;*  ========================================================================
;*
;*   Copyright (C) 1991-2004 SciTech Software, Inc. All rights reserved.
;*
;*   This file may be distributed and/or modified under the terms of the
;*   GNU General Public License version 2.0 as published by the Free
;*   Software Foundation and appearing in the file LICENSE.GPL included
;*   in the packaging of this file.
;*
;*   Licensees holding a valid Commercial License for this product from
;*   SciTech Software, Inc. may use this file in accordance with the
;*   Commercial License Agreement provided with the Software.
;*
;*   This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING
;*   THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;*   PURPOSE.
;*
;*   See http://www.scitechsoft.com/license/ for information about
;*   the licensing options available and how to purchase a Commercial
;*   License Agreement.
;*
;*   Contact license@scitechsoft.com if any conditions of this licensing
;*   are not clear to you, or you have questions about licensing options.
;*
;*  ========================================================================
;*
;* Language:    NASM
;* Environment: IBM PC (MS DOS)
;*
;* Description: Macros used by the fixed point assembler routines.
;*
;****************************************************************************

; Define a macro to round the multiplied value in EAX:EDX and stick the
; resulting fixed point number in EAX.

%macro  ROUNDIT 0
        add     eax,8000h       ; Round by adding 2^-17
        adc     edx,0           ; Whole part of result is in EDX
        shrd    eax,edx,16      ; Shift the fractional part into EAX
%endmacro

; Define a macro to round the result in EBX:ECX and stick the resulting
; fixed point number in EAX.

%macro  ROUNDIT_EBX_ECX 0
        mov     eax,ecx
        add     eax,8000h       ; Round by adding 2^-17
        adc     ebx,0           ; Whole part of result is in EBX
        shrd    eax,ebx,16      ; Shift the fractional part into EAX
%endmacro

